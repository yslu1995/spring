#共用对象 gareen 表示不同线程的相同变量值 这里的gareen是引用对象 只是一个地址，hero里的属性其实是可以变的
synchronized (gareen) {
 gareen.recover();
}

#进一步而言，把方法加同步锁，表示当前对象在多线程使用中是线程安全的！（也就是说公用的就是当前的class对象）

#如果一个类，其方法都是有synchronized修饰的，那么该类就叫做线程安全的类
同一时间，只有一个线程能够进入 这种类的一个实例 的去修改数据，进而保证了这个实例中的数据的安全(不会同时被多线程修改而变成脏数据)
比如StringBuffer和StringBuilder的区别
StringBuffer的方法都是有synchronized修饰的，StringBuffer就叫做线程安全的类
而StringBuilder就不是线程安全的类