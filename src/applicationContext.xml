<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
   http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!--引入注解-->
    <!--<context:annotation-config/>-->

    <!--扫描包，注入bean -->
    <!--其作用是告诉Spring，bean都放在com.how2java.pojo这个包下-->
    <!--<context:component-scan base-package="com.how2java"/>-->

    <!--单个bean的注入-->
    <!--通过关键字c即可获取Category对象，该对象获取的时候，即被注入了字符串"lys"到name属性中 -->
    <!--<bean name="c" class="com.how2java.pojo.Category">-->
        <!--<property name="name" value="lys" />-->
    <!--</bean>-->

    <!--<bean name="product" class="com.how2java.pojo.Product">-->
        <!--<property name="id" value="654" />-->
    <!--</bean>-->

    <!--<bean name="p" class="com.how2java.pojo.Product">-->
        <!--<property name="name" value="product1" />-->
        <!--&lt;!&ndash;<property name="category" ref="c" />&ndash;&gt;-->
    <!--</bean>-->

    <bean name="c" class="com.how2java.pojo.Category">
        <property name="name" value="yyy"/>
    </bean>

    <bean name="p" class="com.how2java.pojo.Product">
        <property name="name" value="product1"/>
        <property name="category" ref="c"/>
    </bean>

    <!--核心业务-->
    <bean name="s" class="com.how2java.service.ProductService">
    </bean>

    <!--声明辅助业务对象-->
    <bean id="loggerAspect" class="com.how2java.aspect.LoggerAspect"/>

    <!--通过aop.config把业务对象与辅助对象编制在一起-->
    <aop:config>
        <!--声明日志切面  右边是核心业务  左边是辅助功能-->
        <!--* 返回任意类型-->
        <!--com.how2java.service.ProductService.* 包名以 com.how2java.service.ProductService 开头的类的任意方法-->
        <!--(..) 参数是任意数量和类型-->
        <aop:pointcut id="loggerCutpoint"  expression="execution(* com.how2java.service.ProductService.*(..)) "/>

        <!-- 辅助切面业务-->
        <aop:aspect id="logAspect" ref="loggerAspect">
            <!--核心业务-->
            <aop:around pointcut-ref="loggerCutpoint" method="log"/>
        </aop:aspect>
    </aop:config>
</beans>
